#!/usr/bin/env ruby
#encoding : UTF-8

require 'polyhoraire'
require 'polyhoraire/auth'
require 'polyhoraire/schedule'
require 'google_exporter'
require 'rake'
require 'optparse'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: polyhoraire [options]"
  
  options[:user] = ''
  opts.on('-u', '--user USER', "Nom d'utilisateur") do |username|
    options[:user] = username
  end
  
  options[:passowrd] = ''
  opts.on('-p', '--password PASS', 'Mot de passe') do |password|
    options[:passowrd] = password
  end
  
  options[:bday] = ''
  opts.on('-d', '--date DATE', 'Date de fete') do |bday|
    options[:bday] = bday
  end
  
  options[:trimester] = ''
  opts.on('-t', '--trimestre TRIM', 'ID du trimester format : AAAAN ou AAAA = ann√©e et N = 1,2,3') do |trimester|
    options[:trimester] = trimester
  end
  
  options[:calID] = ''
  opts.on('-c', '--calendarID CALID', 'ID du calendrier google') do |calID|
    options[:calID] = calID
  end
  
  options[:config] = false
  opts.on('-C','--config','Configurer google API') do 
    options[:config] = true
  end
  

  opts.on('-h', '--help',"Afficher l'aide") do
     puts opts
     exit
   end
end

def noConfigFound? 
  true unless File.exists?(Poly::userConfDir + '/google-api.yaml')
end

def fetchTrimesters
  require 'open-uri'
  config = open(Poly::userConfDir + '/trimesters.yaml', 'wb')
  gitConf = open('https://raw.github.com/flatzo/polyhoraire/master/conf/trimesters.yaml')
  config.write(gitConf.read)
  config.close
  
end

optparse.parse!
puts options[:user].to_s + options[:passowrd].to_s + options[:bday].to_s
unless options[:config] 
  raise OptionParser::MissingArgument if options[:user] == ''
  raise OptionParser::MissingArgument if options[:passowrd] == ''
  raise OptionParser::MissingArgument if options[:bday] == ''
  raise OptionParser::MissingArgument if options[:trimester] == ''
  raise OptionParser::MissingArgument if options[:calID] == ''
end

Poly::userConfDir = File.expand_path('~/.polyhoraire/conf')

if noConfigFound? or options[:config]
  require 'setup'
  
  FileUtils.makedirs Poly::userConfDir
  
  Setup.google
  
  exit if options[:config]
end

fetchTrimesters

auth = Poly::Auth.new

auth.connect(options[:user].to_s,options[:passowrd].to_s,options[:bday].to_s)
    
schedule = Poly::Schedule.new(auth,options[:trimester].to_i)

exporter = GoogleExporter.new
exporter.send(schedule,options[:calID])

